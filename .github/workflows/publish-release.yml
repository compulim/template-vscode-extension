name: Publish release on push tag

on:
  push:
    tags: 'v*'
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm install
      - run: npx @vscode/vsce package
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: ./*.vsix
      - name: Draft a new release
        run: gh release create ${{ github.ref_name }} ./*.vsix --draft --notes-file ./CHANGELOG.md
        env:
          GH_TOKEN: ${{ github.token }}
  publish-package:
    environment: production
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: package
      - id: read-package-json
        name: Read package.json
        run: |
          echo package-name=`busybox unzip \`ls ./*.vsix\` -p extension/package.json | jq -r .name` >> $GITHUB_OUTPUT
          echo version=`busybox unzip \`ls ./*.vsix\` -p extension/package.json | jq -r .version` >> $GITHUB_OUTPUT
      - if: ${{ contains(steps.read-package-json.outputs.version, '-') }}
        name: Check version number
        run: |
          echo ::error::Cannot publish prerelease version ${{ steps.read-package-json.outputs.version }}
          exit 1
      - env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        name: Publish
        run: npx @vscode/vsce publish --packagePath `ls ./*.vsix`
  publish-release:
    needs:
      - build
      - publish-package
    runs-on: ubuntu-latest
    steps:
      - name: Publish release
        run: gh release edit ${{ github.ref_name }} --draft=false --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Summarize job
        run: GitHub release created at https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}. >> $GITHUB_STEP_SUMMARY
